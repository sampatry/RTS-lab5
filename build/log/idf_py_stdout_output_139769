[1/9] Performing build step for 'bootloader'
[1/1] cd /home/sam/esp/projects/lab5/20250715/RTS-lab5/build/bootloader/esp-idf/esptool_py && /home/sam/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/sam/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/sam/esp/projects/lab5/20250715/RTS-lab5/build/bootloader/bootloader.bin
Bootloader binary size 0x6570 bytes. 0xa90 bytes (9%) free.
[2/9] No install step for 'bootloader'
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/RTS-lab5.c.obj
/home/sam/esp/projects/lab5/20250715/RTS-lab5/main/RTS-lab5.c: In function 'app_main':
/home/sam/esp/projects/lab5/20250715/RTS-lab5/main/RTS-lab5.c:69:25: warning: passing argument 1 of 'i2c_master_send' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
   69 |         i2c_master_send(on_command, sizeof(on_command));
      |                         ^~~~~~~~~~
/home/sam/esp/projects/lab5/20250715/RTS-lab5/main/RTS-lab5.c:44:42: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'const uint8_t *' {aka 'const unsigned char *'}
   44 | static esp_err_t i2c_master_send(uint8_t message[], int len)
      |                                  ~~~~~~~~^~~~~~~~~
/home/sam/esp/projects/lab5/20250715/RTS-lab5/main/RTS-lab5.c:71:25: warning: passing argument 1 of 'i2c_master_send' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
   71 |         i2c_master_send(off_command, sizeof(off_command));
      |                         ^~~~~~~~~~~
/home/sam/esp/projects/lab5/20250715/RTS-lab5/main/RTS-lab5.c:44:42: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'const uint8_t *' {aka 'const unsigned char *'}
   44 | static esp_err_t i2c_master_send(uint8_t message[], int len)
      |                                  ~~~~~~~~^~~~~~~~~
[4/9] Completed 'bootloader'
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable RTS-lab5.elf
[8/9] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/sam/esp/projects/lab5/20250715/RTS-lab5/build/RTS-lab5.bin
[9/9] cd /home/sam/esp/projects/lab5/20250715/RTS-lab5/build/esp-idf/esptool_py && /home/sam/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/sam/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/sam/esp/projects/lab5/20250715/RTS-lab5/build/partition_table/partition-table.bin /home/sam/esp/projects/lab5/20250715/RTS-lab5/build/RTS-lab5.bin
RTS-lab5.bin binary size 0x30fd0 bytes. Smallest app partition is 0x100000 bytes. 0xcf030 bytes (81%) free.
